// SPDX-License-Identifier: UNLICENSED
// This is licensed under the Cryptographic Open Software License 1.0
pragma solidity ^0.8.28;

uint32 constant FILTER_EXEC_NUM = 0;

uint32 constant COLUMN_EXPR_NUM = 0;
uint32 constant EQUALS_EXPR_NUM = 1;
uint32 constant LITERAL_EXPR_NUM = 2;

uint32 constant BIGINT_TYPE_NUM = 0;

uint256 constant TOO_FEW_CHALLENGES = 0x700caebe_00000000_00000000_00000000_00000000_00000000_00000000_00000000;
uint256 constant TOO_FEW_FINAL_ROUND_MLES = 0xfb828ab5_00000000_00000000_00000000_00000000_00000000_00000000_00000000;
uint256 constant TOO_FEW_ONE_EVALUATIONS = 0x7e76b323_00000000_00000000_00000000_00000000_00000000_00000000_00000000;
uint256 constant TOO_FEW_SUBPOLYNOMIAL_MULTIPLIERS =
    0x4a9aba52_00000000_00000000_00000000_00000000_00000000_00000000_00000000;
uint256 constant UNSUPPORTED_LITERAL_TYPE = 0x004614ca_00000000_00000000_00000000_00000000_00000000_00000000_00000000;
uint256 constant UNSUPPORTED_EXPR_TYPE = 0xa68ef115_00000000_00000000_00000000_00000000_00000000_00000000_00000000;
uint256 constant UNSUPPORTED_PLAN_TYPE = 0x45937426_00000000_00000000_00000000_00000000_00000000_00000000_00000000;
uint256 constant ROUND_EVALUATION_MISMATCH = 0x741f5c3f_00000000_00000000_00000000_00000000_00000000_00000000_00000000;
uint256 constant WRONG_SUMCHECK_SIZE = 0x07abb741_00000000_00000000_00000000_00000000_00000000_00000000_00000000;
uint256 constant UNSUPPORTED_PROOF_TYPE = 0x3971511f_00000000_00000000_00000000_00000000_00000000_00000000_00000000;
uint256 constant FINAL_EVALUATION_MISMATCH = 0x505dc3d0_00000000_00000000_00000000_00000000_00000000_00000000_00000000;

uint256 constant MODULUS = 0x30644e72_e131a029_b85045b6_8181585d_2833e848_79b97091_43e1f593_f0000001;
uint256 constant MODULUS_PLUS_ONE = 0x30644e72_e131a029_b85045b6_8181585d_2833e848_79b97091_43e1f593_f0000002;
uint256 constant MODULUS_MINUS_ONE = 0x30644e72_e131a029_b85045b6_8181585d_2833e848_79b97091_43e1f593_f0000000;
uint256 constant MODULUS_MASK = 0x1FFFFFFF_FFFFFFFF_FFFFFFFF_FFFFFFFF_FFFFFFFF_FFFFFFFF_FFFFFFFF_FFFFFFFF;

uint256 constant WORD_SIZE = 1 << 5;
uint256 constant WORD_SHIFT = 5; // 2^5 = 32 = 0x20

uint256 constant CHALLENGE_HEAD_OFFSET = 0 << 5;
uint256 constant CHALLENGE_TAIL_OFFSET = 1 << 5;
uint256 constant FINAL_ROUND_MLE_HEAD_OFFSET = 2 << 5;
uint256 constant FINAL_ROUND_MLE_TAIL_OFFSET = 3 << 5;
uint256 constant ONE_EVALUATION_HEAD_OFFSET = 4 << 5;
uint256 constant ONE_EVALUATION_TAIL_OFFSET = 5 << 5;
uint256 constant SUMCHECK_EVALUATION_OFFSET = 6 << 5;
uint256 constant SUBPOLYNOMIAL_MULTIPLIER_HEAD_OFFSET = 7 << 5;
uint256 constant SUBPOLYNOMIAL_MULTIPLIER_TAIL_OFFSET = 8 << 5;
uint256 constant ENTRYWISE_MULTIPLIERS_EVALUATION_OFFSET = 9 << 5;
uint256 constant MAX_DEGREE_OFFSET = 10 << 5;
uint256 constant RANGE_LENGTH_OFFSET = 11 << 5;

uint256 constant BUILDER_SIZE = 12 << 5;

uint256 constant FREE_PTR = 0x40;

uint256 constant COMMITMENT_SIZE = 0x20;

[package]
publish = true
name = "proof-of-sql"
version = { workspace = true }
edition = { workspace = true }
repository = { workspace = true }
description = "High performance zero knowledge (ZK) prover for SQL."
exclude = { workspace = true }
license-file = { workspace = true }

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
doctest = true
test = true

[dependencies]
ahash = { workspace = true }
ark-bls12-381 = { workspace = true }
ark-bn254 = { workspace = true }
ark-curve25519 = { workspace = true }
ark-ec = { workspace = true }
ark-ff = { workspace = true }
ark-poly = { workspace = true }
ark-serialize = { workspace = true }
ark-std = { workspace = true }
arrow = { workspace = true, optional = true }
bincode = { workspace = true, features = ["serde", "alloc"] }
bit-iter = { workspace = true }
bigdecimal = { workspace = true }
blake3 = { workspace = true }
blitzar = { workspace = true, optional = true }
bnum = { workspace = true }
bumpalo = { workspace = true, features = ["collections"] }
bytemuck = { workspace = true }
byte-slice-cast = { workspace = true }
clap = { workspace = true, features = ["derive", "env"], optional = true }
curve25519-dalek = { workspace = true, features = ["serde"] }
chrono = { workspace = true, features = ["serde"] }
derive_more = { workspace = true }
enum_dispatch = { workspace = true }
ff = { workspace = true, optional = true }
halo2curves = { workspace = true, optional = true }
indexmap = { workspace = true, features = ["serde"] }
indicatif = { workspace = true, optional = true }
itertools = { workspace = true }
merlin = { workspace = true, optional = true }
nova-snark = { workspace = true, optional = true }
num-traits = { workspace = true }
num-bigint = { workspace = true, default-features = false }
opentelemetry = { workspace = true, optional = true  }
opentelemetry-jaeger = { workspace = true, optional = true }
postcard = { workspace = true, features = ["alloc"] }
rand = { workspace = true, default-features = false, optional = true }
rand_chacha = { workspace = true, optional = true }
rayon = { workspace = true, optional = true }
serde = { workspace = true, features = ["serde_derive"] }
serde_json = { workspace = true }
sha2 = { workspace = true, optional = true }
snafu = { workspace = true }
sqlparser = { workspace = true, features = ["serde"]  }
sysinfo = {workspace = true, optional = true }
tempfile = { workspace = true, optional = true }
tiny-keccak = { workspace = true }
tracing = { workspace = true, features = ["attributes"] }
tracing-opentelemetry = { workspace = true, optional = true }
tracing-subscriber = { workspace = true, optional = true }
zerocopy = { workspace = true }

[dev-dependencies]
arrow-csv = { workspace = true }
criterion = { workspace = true, features = ["html_reports"] }
hex = { workspace = true }
merlin = { workspace = true }
rand = { workspace = true, default-features = false, features = ["std"] }
rand_core = { workspace = true, default-features = false }
serde_json = { workspace = true }
tracing = { workspace = true }
flexbuffers = { workspace = true }
proptest = { workspace = true }
proptest-derive = { workspace = true }

[package.metadata.cargo-udeps.ignore]
development = ["arrow-csv", "criterion", "opentelemetry", "opentelemetry-jaeger", "tracing-opentelemetry", "tracing-subscriber"]

[features]
default = ["arrow", "perf"]
utils = ["dep:indicatif", "dep:rand_chacha", "dep:sha2", "dep:clap", "dep:tempfile"]
arrow = ["dep:arrow", "std"]
bench = ["blitzar", "dep:clap", "dep:rand", "hyperkzg_proof", "opentelemetry", "opentelemetry-jaeger", "std", "tracing-opentelemetry", "tracing-subscriber" ]
blitzar = ["dep:blitzar", "dep:merlin", "std"]
hyperkzg_proof = ["dep:nova-snark", "std", "dep:ff", "dep:halo2curves", "blitzar"]
test = ["dep:rand", "std"]
perf = ["blitzar", "cpu-perf"]
cpu-perf = ["rayon", "ark-ec/parallel", "ark-poly/parallel", "ark-ff/asm"]
rayon = ["dep:rayon", "std"]
std = ["snafu/std", "ark-serialize/std", "dep:sysinfo" ]

[lints]
workspace = true

[[bin]]
name = "generate-parameters"
path = "utils/generate-parameters/main.rs"
required-features = [ "std", "blitzar", "utils" ]

[[bin]]
name = "commitment-utility"
path = "utils/commitment-utility/main.rs"
required-features = [ "std", "blitzar", "utils" ]

[[bin]]
name = "jaeger_benches"
path = "benches/jaeger/bin/jaeger_benches.rs"
required-features = [ "bench" ]

[[example]]
name = "hello_world"
required-features = ["test"]

[[example]]
name = "posql_db"
required-features = ["arrow", "utils"]

[[example]]
name = "space"
required-features = ["arrow"]

[[example]]
name = "dog_breeds"
required-features = ["arrow"]

[[example]]
name = "wood_types"
required-features = ["arrow"]

[[example]]
name = "dinosaurs"
required-features = ["arrow"]

[[example]]
name = "books"
required-features = ["arrow"]

[[example]]
name = "programming_books"
required-features = ["arrow"]

[[example]]
name = "brands"
required-features = ["arrow"]

[[example]]
name = "census"
required-features = [ "arrow" ]

[[example]]
name = "plastics"
required-features = ["arrow"]

[[example]]
name = "avocado-prices"
required-features = ["arrow"]

[[example]]
name = "sushi"
required-features = ["arrow"]

[[example]]
name = "stocks"
required-features = ["arrow"]

[[example]]
name = "tech_gadget_prices"
required-features = [ "arrow" ]

[[example]]
name = "albums"
required-features = [ "arrow" ]

[[example]]
name = "vehicles"
required-features = [ "arrow" ]

[[example]]
name = "countries"
required-features = [ "arrow" ]

[[example]]
name = "rockets"
required-features = [ "arrow" ]

[[bench]]
name = "bench_append_rows"
harness = false
required-features = ["test"]
